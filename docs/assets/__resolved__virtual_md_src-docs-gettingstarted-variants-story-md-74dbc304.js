const html = '<h2 id="variants" tabindex="-1">Variants <a class="header-anchor" href="#variants" aria-hidden="true">#</a></h2>\n<p>Creating different variants for each template.</p>\n<pre><code class="language-typescript"><div class="htw-relative htw-not-prose __histoire-code"><div class="htw-absolute htw-top-0 htw-right-0 htw-text-xs htw-text-white/40">typescript</div><pre class="shiki github-dark" style="background-color: #0d1117"><code><span class="line"><span style="color: #FF7B72">export</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">interface</span><span style="color: #C9D1D9"> </span><span style="color: #FFA657">VariantClass</span><span style="color: #C9D1D9"> {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">/** Class that styles variant */</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">classes</span><span style="color: #FF7B72">:</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">string</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">/** Content inside container */</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">content</span><span style="color: #FF7B72">?:</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">string</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">/** Duplicate variant &#39;x&#39; number of times */</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">duplicate</span><span style="color: #FF7B72">?:</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">number</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">/** Title of variant */</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">title</span><span style="color: #FF7B72">:</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">string</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #FF7B72">export</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">interface</span><span style="color: #C9D1D9"> </span><span style="color: #FFA657">VariantDisplay</span><span style="color: #C9D1D9"> {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">link</span><span style="color: #FF7B72">?:</span><span style="color: #C9D1D9"> </span><span style="color: #FFA657">VariantLink</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">name</span><span style="color: #FF7B72">?:</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">string</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">title</span><span style="color: #FF7B72">:</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">string</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">variants</span><span style="color: #FF7B72">?:</span><span style="color: #C9D1D9"> </span><span style="color: #FFA657">DisplayVariants</span><span style="color: #C9D1D9">[]</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #FF7B72">export</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">interface</span><span style="color: #C9D1D9"> </span><span style="color: #FFA657">VariantColors</span><span style="color: #C9D1D9"> {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">/** How many accent iterations to show */</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">accent</span><span style="color: #FF7B72">:</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">number</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">|</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">boolean</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">/** How many darken iterations to show */</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">darken</span><span style="color: #FF7B72">:</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">number</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">|</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">boolean</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">/** How many lighten iterations to show */</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">lighten</span><span style="color: #FF7B72">:</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">number</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">|</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">boolean</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">/** Title of variant */</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">name</span><span style="color: #FF7B72">:</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">string</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #FF7B72">export</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">interface</span><span style="color: #C9D1D9"> </span><span style="color: #FFA657">VariantComponent</span><span style="color: #C9D1D9"> {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">/** Build classes with a custom function (since JSON cant handle arrow functions) */</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">builder</span><span style="color: #FF7B72">?:</span><span style="color: #C9D1D9"> </span><span style="color: #FFA657">BuilderFunction</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">/** Used when template is containerized. */</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">children</span><span style="color: #FF7B72">?:</span><span style="color: #C9D1D9"> </span><span style="color: #FFA657">VariantComponent</span><span style="color: #C9D1D9">[]</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">/**  Styling classes */</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">classes</span><span style="color: #FF7B72">?:</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">string</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">/** Component name for variant */</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">component</span><span style="color: #FF7B72">:</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">string</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">/** Content inside container */</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">content</span><span style="color: #FF7B72">?:</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">string</span><span style="color: #C9D1D9">  </span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">/** Array of states needed */</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">states</span><span style="color: #FF7B72">?:</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">string</span><span style="color: #C9D1D9">[]</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">/** Title of variant */</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">title</span><span style="color: #FF7B72">:</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">string</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span>\n<span class="line"></span></code></pre></div></code></pre>\n<hr>\n<h3 id="building-class-values-for-component-variants" tabindex="-1">Building class values for component variants <a class="header-anchor" href="#building-class-values-for-component-variants" aria-hidden="true">#</a></h3>\n<pre><code class="language-typescript"><div class="htw-relative htw-not-prose __histoire-code"><div class="htw-absolute htw-top-0 htw-right-0 htw-text-xs htw-text-white/40">typescript</div><pre class="shiki github-dark" style="background-color: #0d1117"><code><span class="line"><span style="color: #FF7B72">export</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">interface</span><span style="color: #C9D1D9"> </span><span style="color: #FFA657">BuilderFunction</span><span style="color: #C9D1D9"> {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">/** Function arguments */</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">args</span><span style="color: #FF7B72">:</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">string</span><span style="color: #C9D1D9">[]</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">/** Function Body */</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #FFA657">body</span><span style="color: #FF7B72">:</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">string</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span>\n<span class="line"></span></code></pre></div></code></pre>\n<hr>\n';
const frontmatter = { "group": "getting-started", "icon": "carbon:settings-adjust", "title": "Variants" };
const relativePath = "src/docs/GettingStarted/Variants.story.md";
export {
  frontmatter,
  html,
  relativePath
};
